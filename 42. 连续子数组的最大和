# -*- coding:utf-8 -*-
class Solution:
    def FindGreatestSumOfSubArray(self, array):
        res, maxmum = 0, None
        for i in array:
            res += i
            maxmum = max(maxmum, res)
            if res < 0:
                res = 0
        return maxmum
        
#动态规划： 用dp[i]表示前i个里面最大的子数组和，故建立起dp[i]和dp[i-1]之间的关系。若dp[i-1] < 0,那么dp[i]=array[i]，否则 dp[i] = dp[i-1] + array[i]
# -*- coding:utf-8 -*-
class Solution:
    def FindGreatestSumOfSubArray(self, array):
        n = len(array)
        dp = [0 for _ in range(n)]
        dp[0] = array[0]
        for j in range(1,n):
            if dp[j-1] < 0:
                dp[j] = array[j]
            else:
                dp[j] = dp[j-1] + array[j]
        return max(dp)
