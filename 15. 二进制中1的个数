# 32位电脑上，负数要尤其注意，负数的右移会造成死循环，因为负数的右移一直都是负数，最高位还是1. 本解法需要循环位数的数目，下面有一种更优的解法。
# -*- coding:utf-8 -*-
class Solution:
    def NumberOf1(self, n):
        count, flag = 0, 1
        i = 0
        while i < 32:
            if n&flag:
                count += 1
            flag = flag<<1
            i += 1
        return count
        
# 更优的解法： 二进制中有几个1，就遍历几次：二进制中最右边的1可以这样消除 n = (n-1)&n。为了消除负数的影响，要将 n = n & 0xffffffff，理解如下：因为
在python中，负数前面有无数个符号补码，因此作用后就是将负数的位数限制为32位，此时取“与”操作后得到的数是无符号的数值。可以当做正数处理
# -*- coding:utf-8 -*-
class Solution:
    def NumberOf1(self, n):
        count = 0
        if n < 0:
            n = n & 0xffffffff
        while n!=0:
            count += 1
            n = (n-1)&n
        return count
